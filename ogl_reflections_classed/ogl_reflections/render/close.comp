#version 450 core

const uint LONGEST = 0xFFFFFFFF;
const float INFINITY = 1e10;

struct Ray {
    int actived;
    vec3 origin;
    vec3 direct;
    vec3 color;
    vec3 final;
    vec4 params;
};

struct Hit {
    float dist;
    uint triangle;
    uint materialID;
    vec3 normal;
    vec3 tangent;
    vec2 texcoord;
    vec4 params;
};

layout(std430, binding=8) buffer s_rays {Ray rays[];};
layout(std430, binding=9) buffer s_hits {Hit hits[];};

uniform mat4 projInv;
uniform mat4 camInv;
uniform vec2 sceneRes;

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

uniform samplerCube cubeTex;

void main()
{
    if(gl_GlobalInvocationID.x < sceneRes.x && gl_GlobalInvocationID.y < sceneRes.y){
        uint t = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * uint(sceneRes.x);

        Hit hit = hits[t];
        Ray ray = rays[t];
        if(hit.dist >= 10000.0f || ray.params.w < 1.0f || ray.params.y >= ray.params.z){
            ray.actived = 0;
            if(ray.params.y < ray.params.z && hit.dist >= 10000.0f) {
                ray.final = mix(ray.final, vec3(texture(cubeTex, ray.direct).xyz), ray.params.x);
            }
        }
        ray.params.w = 0.0f;
        rays[t] = ray;
    }
}